using NUnit.Framework;

namespace Bindables.Windows.Test;

public abstract partial class WindowsDependencyPropertyTests<T>
{
	[Test]
	public void RegularProperty()
	{
		const string sourceCodeTemplate = @"
using PlatformNamespace;
using AttributeNamespace;

public partial class ExampleClass : DependencyObject
{
	private static readonly string DefaultValue = ""Test"";

	[AttributeName(typeof(int))]
	public static readonly PropertyType Example1Property;

	[AttributeName(typeof(int), OnPropertyChanged = nameof(PropertyChangedCallback))]
	public static readonly PropertyType Example2Property;

	[AttributeName(typeof(string), DefaultValueField = nameof(DefaultValue))]
	public static readonly PropertyType Example3Property;

	[AttributeName(typeof(string), Options = FrameworkPropertyMetadataOptions.BindsTwoWayByDefault)]
	public static readonly PropertyType Example4Property;

	[AttributeName(typeof(string), OnPropertyChanged = nameof(PropertyChangedCallback), DefaultValueField = nameof(DefaultValue))]
	public static readonly PropertyType Example5Property;

	[AttributeName(typeof(string), OnPropertyChanged = nameof(PropertyChangedCallback), DefaultValueField = nameof(DefaultValue), Options = FrameworkPropertyMetadataOptions.BindsTwoWayByDefault)]
	public static readonly PropertyType Example6Property;

	[AttributeName(typeof(int), OnCoerceValue = nameof(CoerceValueCallback))]
	public static readonly PropertyType Example7Property;

	[AttributeName(typeof(int), OnPropertyChanged = nameof(PropertyChangedCallback), OnCoerceValue = nameof(CoerceValueCallback))]
	public static readonly PropertyType Example8Property;

	[AttributeName(typeof(string), OnCoerceValue = nameof(CoerceValueCallback), DefaultValueField = nameof(DefaultValue))]
	public static readonly PropertyType Example9Property;

	[AttributeName(typeof(string), OnPropertyChanged = nameof(PropertyChangedCallback), OnCoerceValue = nameof(CoerceValueCallback), DefaultValueField = nameof(DefaultValue))]
	public static readonly PropertyType Example10Property;

	[AttributeName(typeof(string), OnCoerceValue = nameof(CoerceValueCallback), DefaultValueField = nameof(DefaultValue), Options = FrameworkPropertyMetadataOptions.BindsTwoWayByDefault)]
	public static readonly PropertyType Example11Property;

	[AttributeName(typeof(string), OnPropertyChanged = nameof(PropertyChangedCallback), OnCoerceValue = nameof(CoerceValueCallback), DefaultValueField = nameof(DefaultValue), Options = FrameworkPropertyMetadataOptions.BindsTwoWayByDefault)]
	public static readonly PropertyType Example12Property;

    private static void PropertyChangedCallback(BaseClassName obj, PropertyTypeChangedEventArgs args)
    {
    }

	private static object CoerceValueCallback(BaseClassName obj, object value)
	{
		return """";
	}
}";

		const string expectedSourceCodeTemplate = @"
// Generated by Bindables
using PlatformNamespace;

#nullable enable

public partial class ExampleClass
{
    public int Example1
    {
        get => (int)GetValue(Example1Property);
        set => SetValue(Example1Property, value);
    }

    public int Example2
    {
        get => (int)GetValue(Example2Property);
        set => SetValue(Example2Property, value);
    }

    public string? Example3
    {
        get => (string?)GetValue(Example3Property);
        set => SetValue(Example3Property, value);
    }

    public string? Example4
    {
        get => (string?)GetValue(Example4Property);
        set => SetValue(Example4Property, value);
    }

    public string? Example5
    {
        get => (string?)GetValue(Example5Property);
        set => SetValue(Example5Property, value);
    }

    public string? Example6
    {
        get => (string?)GetValue(Example6Property);
        set => SetValue(Example6Property, value);
    }

    public int Example7
    {
        get => (int)GetValue(Example7Property);
        set => SetValue(Example7Property, value);
    }

    public int Example8
    {
        get => (int)GetValue(Example8Property);
        set => SetValue(Example8Property, value);
    }

    public string? Example9
    {
        get => (string?)GetValue(Example9Property);
        set => SetValue(Example9Property, value);
    }

    public string? Example10
    {
        get => (string?)GetValue(Example10Property);
        set => SetValue(Example10Property, value);
    }

    public string? Example11
    {
        get => (string?)GetValue(Example11Property);
        set => SetValue(Example11Property, value);
    }

    public string? Example12
    {
        get => (string?)GetValue(Example12Property);
        set => SetValue(Example12Property, value);
    }

    static ExampleClass()
    {
        Example1Property = PropertyType.Register(
            ""Example1"",
            typeof(int),
            typeof(ExampleClass),
            new FrameworkPropertyMetadata());
        
        Example2Property = PropertyType.Register(
            ""Example2"",
            typeof(int),
            typeof(ExampleClass),
            new FrameworkPropertyMetadata(PropertyChangedCallback));
        
        Example3Property = PropertyType.Register(
            ""Example3"",
            typeof(string),
            typeof(ExampleClass),
            new FrameworkPropertyMetadata(DefaultValue));
        
        Example4Property = PropertyType.Register(
            ""Example4"",
            typeof(string),
            typeof(ExampleClass),
            new FrameworkPropertyMetadata(default, (FrameworkPropertyMetadataOptions)256));
        
        Example5Property = PropertyType.Register(
            ""Example5"",
            typeof(string),
            typeof(ExampleClass),
            new FrameworkPropertyMetadata(DefaultValue, PropertyChangedCallback));
        
        Example6Property = PropertyType.Register(
            ""Example6"",
            typeof(string),
            typeof(ExampleClass),
            new FrameworkPropertyMetadata(DefaultValue, (FrameworkPropertyMetadataOptions)256, PropertyChangedCallback));
        
        Example7Property = PropertyType.Register(
            ""Example7"",
            typeof(int),
            typeof(ExampleClass),
            new FrameworkPropertyMetadata(default, CoerceValueCallback));
        
        Example8Property = PropertyType.Register(
            ""Example8"",
            typeof(int),
            typeof(ExampleClass),
            new FrameworkPropertyMetadata(PropertyChangedCallback, CoerceValueCallback));
        
        Example9Property = PropertyType.Register(
            ""Example9"",
            typeof(string),
            typeof(ExampleClass),
            new FrameworkPropertyMetadata(DefaultValue, default, CoerceValueCallback));
        
        Example10Property = PropertyType.Register(
            ""Example10"",
            typeof(string),
            typeof(ExampleClass),
            new FrameworkPropertyMetadata(DefaultValue, PropertyChangedCallback, CoerceValueCallback));
        
        Example11Property = PropertyType.Register(
            ""Example11"",
            typeof(string),
            typeof(ExampleClass),
            new FrameworkPropertyMetadata(DefaultValue, (FrameworkPropertyMetadataOptions)256, default, CoerceValueCallback));
        
        Example12Property = PropertyType.Register(
            ""Example12"",
            typeof(string),
            typeof(ExampleClass),
            new FrameworkPropertyMetadata(DefaultValue, (FrameworkPropertyMetadataOptions)256, PropertyChangedCallback, CoerceValueCallback));
        
    }
}";

		TestSourceCodeTemplate(sourceCodeTemplate, expectedSourceCodeTemplate);
	}
}
